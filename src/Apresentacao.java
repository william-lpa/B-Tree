
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author feijoada
 */
public class Apresentacao extends javax.swing.JFrame {
    ArvoreB arvore;
    /**
     * Creates new form Apresentacao
     */

    /**
     * Creates new form Apresentacao
     * @param arvore
     */
    public Apresentacao(ArvoreB arvore) {
        initComponents();
        this.arvore =arvore;
        atualizarJtree();
        
        
    }
    
    public void atualizarJtree() {
		atualizarJtree(null);
	}
    
    public void atualizarJtree(NodoArvore busca) {
		try {
			if (arvore != null) {
				if (arvore.getRaiz() != null) {
					numLinha = 1;
					achou = false;
					DefaultMutableTreeNode pai;
					if (arvore.getRaiz().possuiItem())
						pai = adicionarNosNaArvore(arvore.getRaiz(), busca);
					else
						pai = new DefaultMutableTreeNode("Raiz");
					jTree1.setModel(new javax.swing.tree.DefaultTreeModel(
							pai));
                                        

					//expandir todos nos
					for (int i = 0; i < jTree1.getRowCount(); i++) {
						jTree1.expandRow(i);
					}

					if (achou) {
						jTree1.setSelectionRow(numLinha);
                                                JOptionPane.showMessageDialog(this, "o valor " + campoEntrada.getText()+" foi encontrado na linha " +
                                                                                numLinha);
					} else if (busca == arvore.getRaiz()){
						jTree1.setSelectionRow(0);
                                        JOptionPane.showMessageDialog(this, "o valor " + campoEntrada.getText()+" foi encontrado na raiz" );}

				}
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(
					null,
					" Erro ao atualizar o componente JTree. Erro: "
							+ e.getMessage());
		}
	}
    
    private int numLinha = 0;
    private boolean achou;

	private DefaultMutableTreeNode adicionarNosNaArvore(NodoArvore raiz, NodoArvore busca) {
		DefaultMutableTreeNode n = new DefaultMutableTreeNode(raiz.toString());
                int indexFilho=qtdeFilhos(raiz);
                int indexFilhoDoFilho=qtdeFilhos(raiz);
		for (NodoArvore filho : raiz.getNodosFilhos()) {
			if (filho == null) {
				n.add(new DefaultMutableTreeNode("Filho "+ indexFilho));
                                indexFilho++;
				if (!achou)
					numLinha++; //pesquisas

			} else {
				if (filho == busca) { //pesquisa
					achou = true;
				} else if (!achou)
					numLinha++;

				if (filho.possuiItem()) //filho tiver filhos
					n.add(adicionarNosNaArvore(filho, busca));
                                else{
					n.add(new DefaultMutableTreeNode("Filho " + indexFilhoDoFilho));
                                indexFilhoDoFilho++;}
			}
		}
		return n;
	}
        
        public int qtdeFilhos(NodoArvore nodo){
            int retorno=0;
            
            for(NodoArvore filho : nodo.getNodosFilhos() ){
                
                if(filho!=null){
                    retorno++;
                        }
            }
            return retorno;
        }
            
        


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        botaoInserir = new javax.swing.JButton();
        campoEntrada = new javax.swing.JTextField();
        botaoRemover = new javax.swing.JButton();
        botaoPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Arvore B");

        jScrollPane1.setViewportView(jTree1);

        botaoInserir.setText("Inserir");
        botaoInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoInserirActionPerformed(evt);
            }
        });

        campoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEntradaActionPerformed(evt);
            }
        });

        botaoRemover.setText("Remover");
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        botaoPesquisar.setText("Pesquisar");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(campoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoInserir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoRemover))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoInserir)
                    .addComponent(campoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRemover)
                    .addComponent(botaoPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEntradaActionPerformed

    private void botaoInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoInserirActionPerformed

        try {
			atualizarJtree();
			arvore.inserir(Integer.parseInt(campoEntrada.getText()));
			atualizarJtree();
		} catch (NumberFormatException ee) {
			JOptionPane.showMessageDialog(null," O valor do item deve ser um número inteiro.");
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null,
					"Erro ao inserir valor na Árvore. Erro: " + e.getMessage());
		}    
        
    }//GEN-LAST:event_botaoInserirActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed
     
        try {
			atualizarJtree(arvore.pesquisar(Integer.parseInt(campoEntrada.getText())));
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null,"Erro ao buscar valor na �rvore. Erro: " + e.getMessage());
		}
	
    }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverActionPerformed

        try {
			arvore.remover(Integer.parseInt(campoEntrada.getText()));
			atualizarJtree();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null,
					"Erro ao remover valor na árvore. Erro: " + e.getMessage());
		}
    }//GEN-LAST:event_botaoRemoverActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoInserir;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JTextField campoEntrada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
